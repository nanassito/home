groups:
  - name: EPA2617
    rules:
      - alert: "Fuite d eau"
      #   expr: mqtt_water_leak > 0.5
      # - alert: Un capteur a planté
      #   expr: (rate(mqtt_message_total{type="air"}[1h])) * on() group_left() absent(6 <= hour() <= 14) == 0
      #   for: 1h
      # - alert: Plusieurs valves fonctionnent en même temps
      #   expr: 'sum({type="valve", mode="", __name__=~"mqtt_state.*"}) > 1'
      #   for: 2m
      # - alert: L arrosage fonctionne depuis trop longtemps
      #   expr: '{type="valve", mode="", __name__=~"mqtt_state.*"} >= 1'
      #   for: 30m
      - alert: Batterie faible
        expr: mqtt_battery{type!="", location!=""} < 30
      # - alert: Le controle d'une valve a été perdu
      #   expr: sum(valve_should_be_running) - sum({__name__=~"mqtt_state_l."}) > 1
      #   for: 30m
      - alert: Echec de détection du jour
        expr: max_over_time(mqtt_illuminance{type!="", location!=""}[24h]) < 500
      - alert: Echec de détection de la nuit
        expr: min_over_time(mqtt_illuminance{type!="", location!=""}[24h]) > 100
      - alert: La machine est terminée
        expr: max_over_time(mqtt_power{location=~".*washer.*", type="power"}[10m]) < 1 and max_over_time(mqtt_power[1h]) > 100
      - alert: Le robot tondeuse est coincé
        expr: max_over_time(mqtt_contact{location=~".*mower.*", type="contact"}[2h15m]) < 1
      - alert: Component downtime
        expr: systemd_unit_state{state="active", name=~"(home|mosquitto|netscan|switches|wg-quick@wg0|zigbee2mqtt).service"} == 0