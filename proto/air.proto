syntax = "proto3";

package air.service;
option go_package = "github.com/nanassito/home/pkg/proto/air;air_proto";

import "google/api/annotations.proto";


message TemperatureRange {
    double min = 1;
    double max = 2;
}

message Sensor {
    string location = 1;
    double temperature = 2;
    int64 lastReportedAtTs = 3;
}

message Hvac {

    enum Mode {
        MODE_UNKNOWN = 0;
        MODE_OFF = 1;
        MODE_FAN_ONLY = 2;
        MODE_COOL = 3;
        MODE_HEAT = 4;
        MODE_AUTO = 5;
        MODE_DRY = 6;
    }
    
    enum Fan {
        FAN_UNKNOWN = 0;
        FAN_AUTO = 1;
        FAN_LOW = 2;
        FAN_MEDIUM = 3;
        FAN_HIGH = 4;
    }
    
    enum Control {
        CONTROL_UNKNOWN = 0;
        CONTROL_ROOM = 1;
        CONTROL_HVAC = 2;
        CONTROL_NONE = 3;
    }

    message State {
        double temperature = 1;
        Mode mode = 2;
        Fan fan = 3;
    }

    string hvacName = 1;
    Control control = 2;
    State reportedState = 3;
    State desiredState = 4;
    int64 TemperatureOffset = 5;
}

message RoomState {
    string roomName = 1;
    TemperatureRange desiredTemperatureRange = 2;
    Sensor sensor = 3;
    map<string, Hvac> hvacs = 4;
}

message ServerState {
    map<string, RoomState> rooms = 1;
    Sensor outsideSensor = 2;
}

message ReqGetAllStates {}
message ReqConfigureRoom {
    string room = 1;
    TemperatureRange desiredTemperatureRange = 2;
}


service AirSvc {
    rpc GetAllStates(ReqGetAllStates) returns (ServerState) {
        option (google.api.http) = {
            get: "/states"
        };
    }

    rpc ConfigureRoom(ReqConfigureRoom) returns (ServerState) {
        option (google.api.http) = {
            post: "/configure/room"
        };
    }
}


// For internal use only. Used to load init data from disk.
message AirConfig {
    message Sensor {
        map<string, string> prometheusLabels = 1;
        string mqttTopic = 2;
    }
    message Room {
        message Hvac {
            string SetModeMqttTopic = 1;
            string reportModeMqttTopic = 2;
            string SetFanMqttTopic = 3;
            string reportFanMqttTopic = 4;
            string SetTemperatureMqttTopic = 5;
            string reportTemperatureMqttTopic = 6;
            map<string, string> prometheusLabels = 7;
        }
        
        map<string, Hvac> hvacs = 1;
        double defaultMinTemperature = 2;
        double defaultMaxTemperature = 3;
        Sensor sensor = 5;
    }

    map<string, Room> rooms = 1;
    Sensor outsideSensor = 2;
}