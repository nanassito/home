syntax = "proto3";

package switch.service;
option go_package = "github.com/nanassito/home/pkg/proto/switches;switches_proto";

import "google/api/annotations.proto";

message ReqList {}
message RspList {
    repeated string SwitchIDs = 1;
}

message ReqActivate {
    string SwitchID = 1;
    int64 DurationSeconds = 2;
    string ClientID = 3;
}
message RspActivate {
    string SwitchID = 1;
    int64 ActiveUntil = 2;
}

message ReqStatus {
    string SwitchID = 1;
}
message RspStatus {
    message Request {
        string ClientID = 1;
        int64 From = 2;
        int64 To = 3;
    }

    string SwitchID = 1;
    bool isActive = 2;
    optional int64 ActiveUntil = 3;
    repeated Request Requests = 4;
}


service SwitchSvc {
    rpc List (ReqList) returns (RspList) {
        option (google.api.http) = {
            get: "/list"
        };
    };
    rpc Activate(ReqActivate) returns (RspActivate) {
        option (google.api.http) = {
            post: "/activate"
        };
    };
    rpc Status(ReqStatus) returns (RspStatus) {
        option (google.api.http) = {
            get: "/status"
        };
    };
}


// For internal use only. Used to load init data from disk.
message SwitchConfig{
    message MqttConfig{
        string SetTopic = 1;
        string MsgRest = 2;
        string MsgActive = 3;
    }

    message PrometheusConfig{
        string Metric = 1;
        map<string, string> Labels = 2;
        int32 ValueRest = 3;
        int32 ValueActive = 4;
    }

    MqttConfig Mqtt = 1;
    PrometheusConfig Prometheus = 2;
}